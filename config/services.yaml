# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    app.payment.mellat.terminal_id : '%env(BANK_LINK_TERMINAL_ID)%'
    app.payment.mellat.user_name : '%env(BANK_LINK_USER_NAME)%'
    app.payment.mellat.password : '%env(BANK_LINK_PASSWORD)%'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    App\Command\FlushCacheCommand:
        arguments:
            $redisHost: '%env(REDIS_HOST)%'
            $redisPort: '%env(REDIS_PORT)%'
        public: true
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    gedmo.listener.softdeleteable:
        class: Gedmo\SoftDeleteable\SoftDeleteableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ '@annotation_reader' ] ]
    Doctrine\ORM\EntityManagerInterface: '@doctrine.orm.entity_manager'

    App\Payment\Bank\Mellat\Link:
        arguments:
            $bankTerminalId: '%app.payment.mellat.terminal_id%'
            $bankUserName: '%app.payment.mellat.user_name%'
            $bankPassword: '%app.payment.mellat.password%'

    security.user_password_hasher:
        class: Symfony\Component\PasswordHasher\Hasher\UserPasswordHasher
        public: true
        arguments:
          [ '@security.password_hasher_factory' ]

